.videoContainer {
    display: flex;
    flex-direction: column;
    padding: 1rem;
    gap: 0.5rem;
    background: rgba(var(--bg-color-rgb), 0.1);
    border-radius: 12px;
    border: 1px solid rgba(var(--border-color-rgb), 0.2);
    transition: all 0.3s ease;
}

.videoContainer:hover {
    border-color: rgba(var(--border-color-rgb), 0.8);
    box-shadow: 0 2px 12px rgba(var(--highlight-rgb), 0.2);
}

.videoDetails {
    text-align: center;
}

.videoDetails h3 {
    color: rgba(var(--highlight-rgb), 1);
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
    font-weight: 600;
}

.videoDuration,
.trimmedDuration {
    color: rgba(var(--text-color-rgb), 0.7);
    font-size: 0.95rem;
    margin: 0.25rem 0;
}

.trimmedDuration {
    color: rgba(var(--highlight-rgb), 0.8);
    font-weight: 500;
}

.videoPreview {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 12px;
    overflow: hidden;
    min-height: 200px;
}

.previewVideo {
    max-width: 100%;
    max-height: 250px;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.videoControls {
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.75rem;
}

.playButton {
    background: rgba(var(--highlight-rgb), 0.9);
    border: none;
    border-radius: 50%;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    color: white;
}

.playButton:hover {
    background: rgba(var(--highlight-rgb), 1);
    transform: scale(1.1);
}

.playButton:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
}

.playButton svg {
    width: 20px;
    height: 20px;
}

.trimmer {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.trimmerLabel {
    color: rgba(var(--text-color-rgb), 0.9);
    font-size: 1rem;
    font-weight: 500;
    text-align: center;
}

.timeline {
    position: relative;

    padding: 0 12px;
    cursor: pointer;
}

.timelineTrack {
    position: relative;
    height: 8px;
    background: rgba(var(--text-color-rgb), 0.2);
    border-radius: 4px;
    top: 50%;
    transform: translateY(-50%);
}

.selectedRange {
    position: absolute;
    height: 100%;
    background: linear-gradient(90deg,
            rgba(var(--highlight-rgb), 0.6),
            rgba(var(--highlight-rgb), 0.8));
    border-radius: 4px;
    transition: all 0.2s ease;
}

.trimHandle {
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 1.5rem;
    height: 1.5rem;
    background: rgba(var(--highlight-rgb), 1);
    border: 2px solid white;
    border-radius: 50%;
    cursor: ew-resize;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 4px rgba(var(--highlight-rgb), 0.2);
    transition: all 0.3s ease-out;
    z-index: 2;
}

.trimHandle:hover {
    transform: translate(-50%, -50%) scale(1.2);
    box-shadow: 0 2px 8px rgba(var(--highlight-rgb), 1);
}

.trimHandle:active {
    transform: translate(-50%, -50%) scale(1.1);
}

.trimHandleIcon {
    color: white;
    font-size: 10px;
    font-weight: bold;
}

.timeLabels {
    display: flex;
    justify-content: space-between;
    color: rgba(var(--text-color-rgb), 0.8);
    font-size: 0.9rem;
}

.settingsButton {
    display: flex;
    box-shadow: 0 0 4px rgba(var(--subtle-glow-rgb, 0.2));
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    border: 2px solid rgba(var(--secondary-color-rgb), 1);
    font-size: clamp(1rem, 1.4vw, 2rem);
    color: rgba(var(--text-color-rgb), 1);
    font-weight: 500;
    background: none;
    font-family: lexend;
    border-radius: 100px;
    cursor: pointer;
    transition: all 0.3s ease-out;
}

.settingsButton:hover {
    border-color: rgba(var(--hover-state-rgb), 1);
    background: rgba(var(--hover-state-rgb), 0.8);
    color: rgba(var(--text-color-rgb), 1);
}

.settingsButton:disabled{
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
}

.settingsButton svg{
    width: 18px;
    height: 18px;
}

.convertButton {
    background: linear-gradient(135deg,
            rgba(var(--highlight-rgb), 0.9),
            rgba(var(--highlight-rgb), 1));
    color: white;
    border: none;
    font-weight: 600;
    font-size: 1rem;
    padding: 1rem 2rem;
    min-height: 48px;
}

.convertButton:hover {
    background: linear-gradient(135deg,
            rgba(var(--highlight-rgb), 1),
            rgba(var(--hover-state-rgb), 1));
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(var(--highlight-rgb), 0.3);
}

.convertButton:disabled {
    background: rgba(var(--text-color-rgb), 0.3);
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
}

.buttonGroup {
    align-self: center;
    width: 50vw;
}

.buttonWrapper {
    display: flex;
    flex-direction: row;
    gap: 1rem;
    align-items: stretch;
    transition: all 0.3s ease;
    width: 100%;
    height: 100%;
    margin-right: auto;
}

/* Container for grouping settings and convert buttons */
.buttonWrapper > div:nth-child(2) {
    margin-left: auto;
    display: flex;
}

.hiddenButton {
    align-self: center;
    justify-self: center;
    animation: btnFadeOut 0.2s ease forwards;
}

@keyframes btnFadeOut {
    from {
        opacity: 0.9;
        width: auto;
        transform: scale(1) translateX(0);
    }
    to {
        opacity: 0;
        height: 0;
        padding: 0;
        margin: 0;
        transform: scale(0.9) translateX(-40px);
        width: 0;
        overflow: hidden;
    }
}

.buttonGroup button:nth-child(1) {
    animation: fadeInTopLeft 0.4s ease forwards;
    animation-delay: 0.1s;
    opacity: 0;
    transform: translate(-10px, -10px);
}

.buttonGroup button:nth-child(2) {
    animation: fadeInTopLeft 0.4s ease forwards;
    animation-delay: 0.2s;
    opacity: 0;
    transform: translate(-10px, -10px);
}

.buttonGroup button:nth-child(3) {
    animation: fadeInTopLeft 0.4s ease forwards;
    animation-delay: 0.3s;
    opacity: 0;
    transform: translate(-10px, -10px);
}

@keyframes fadeInTopLeft {
    0% {
        opacity: 0;
        transform: translate(-5px, -10px);
    }
    100% {
        opacity: 1;
        transform: translate(0, 0);
    }
}

.confirmButton {
    position: relative;
    box-shadow: 0 0 4px rgba(var(--subtle-glow-rgb, 0.2));
    display: flex;
    align-items: center;
    padding: 2vh 5vw;
    font-size: clamp(1rem, 1.4vw, 2rem);
    font-family: lexend;
    border-radius: 100px;
    background: none;
    font-weight: 500;
    color: var(--text-color);
    border: 2px solid rgba(var(--highlight-rgb), 0.8);
    cursor: pointer;
    transition: all 0.3s ease;
}

.confirmButton:hover {
    background-color: rgba(var(--highlight-rgb), 1);
    color: white;
    border-radius: 12px;
    transform: scale(1.05);
}

.binButton {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    aspect-ratio: 1;
    height: 100%;
    border-radius: 100px;
    background: inherit;
    cursor: pointer;
    box-shadow: 0px 0px 4px rgba(var(--attention-color-rgb), 0.5);
    border: 2px solid rgba(var(--attention-color-rgb), 1);
    transition: all 0.3s ease;
    margin-right: auto;
}

.binBottom {
    width: 15px;
    color: var(--text-color);
}

.binTop {
    width: 17px;
    transform-origin: right;
    transition-duration: 0.3s;
    color: var(--text-color);
}

.binButton:hover .binTop {
    transform: rotate(45deg);
}

.binButton:hover {
    background-color: rgba(var(--attention-color-rgb), 1);
    transform: scale(1.1);
}

.binButton:hover .binBottom, 
.binButton:hover .binTop {
    color: white;
}

@media (max-width: 768px) and (orientation: portrait) {
    .videoContainer {
        padding: 1rem;
        gap: 1rem;
    }

    .previewVideo {
        max-height: 200px;
    }

    .trimHandle {
        width: 20px;
        height: 20px;
    }    
    
    .settingsButton {
        font-size: 1rem;
        width: 100%;
        flex: 1;
        justify-content: center;
    }

    .buttonGroup {
        width: 100%;
        display: flex;
        flex-direction: column;
        align-items: stretch;
    }

    .buttonWrapper {
        flex-wrap: wrap;
        gap: 0.5rem;
    }
    
    .confirmButton {
        flex-basis: 100%;
        width: 100%;
        justify-content: center;
    }
    
    /* Make sure the div containing the settings button grows */
    .buttonWrapper > div:nth-child(2) {
        flex-grow: 1;
        margin-left: 1rem;
    }    .binButton {
        aspect-ratio: 0;
        width: 100%;
        flex: 1;
    }

    /* Container for bin button */
    .buttonWrapper > div:first-child {
        width: calc(50% - 0.5rem);
        flex: 0 0 calc(50% - 0.5rem);
    }
    
    /* Container for settings button */
    .buttonWrapper > div:nth-child(2) {
        width: calc(50% - 0.5rem);
        margin-left: 0;
    }
}
